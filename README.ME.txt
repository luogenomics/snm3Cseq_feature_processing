frac_impute_sample.py






### Luo Lab Demultiplexing Scripts

**Basic Operation:**

```
python fastq_demultiplex.py
qsub -l h_mem=24G,h_rt=2:00:00 fastq_demultiplex.sh
```

**About:**

This repository contains tools to demultiplex reads from the Luo lab's single-nucleus sequencing assays, including [snmCAT-seq](https://www.cell.com/cell-genomics/fulltext/S2666-979X(22)00027-1), [sn-m3C-seq](https://www.ncbi.nlm.nih.gov/pubmed/31501549), and [snmC-seq2](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6147798/).

The scripts allow an analyst to go from sequencing reads pooled across a given 384-well plate to well-specific reads.

That is, PlateABC_R1.fastq.gz output from BaseSpace --> PlateABC_A01_indexed_R1.fastq.gz, PlateABC_A02_indexed_R1.fastq.gz, ..., PlateABC_P24_indexed_R1.fastq.gz (and its paired Read 2 PlateABC_R2.fastq.gz --> PlateABC_A01_indexed_R2.fastq.gz, ..., assumed to be in the same folder). Demultiplexing is usually the first step in our lab's read processing pipelines.

For more details on the structure of reads/demultiplexing barcodes, please see diagrams previously documented with the [Ecker Lab](https://hq-1.gitbook.io/mc/tech-background/barcoding) and the aforementioned assay papers.

### File Contents

**Scripts:** 
* allc_to_csv.py : converts allc methylation file to four csvs (gene CH methylation, gene CG methylation, bin CH mathylation, and bin CG methylation) for processing by allcDir_toScanpy.py. 
	* Parameters:
	* allc_file_path : path to allc file on drive (.allc)
	* bin_size : base pair length of genomic bins to calculate across the entire genome
	* reference_genome_path : path to reference genome on drive (as .fasta or .fa)
	* genome_annotation_bed : bed_file of genomic annotations. (Annotations provided by the input bed are flanked +- 2kb)
	* out_prefix : prefix appended to output files
	
* allcDir_toScanpy.py : Converts directory of csvs generated by allc_to_csv.py into AnnData objects with X matrix of methylation counts per feature (one for each modality, up to four; gmCH, gmCG, bmCH, and bmCG). Each AnnData object is saved as an .h5ad file along with an associated fastparquet (.parq) file containing coverage information.
	* Parameters: 
	* path : path of directory on drive
	* outpre : prefix to append to output files

* frac_impute_sample.py : Expects files from allcDir_toScanpy.py to be placed in a directory called sc_files. Computes feature methylation fractions, removes features with mean coverage < threshold, and imputes values by mean sample methylation for features of cells with coverage <= imputation threshold.
	* Parameters : 
	* sample_root : input file prefixes leading _gmCH, gmCG, bmCH, or bmCG
	* min_mean_feature_coverage : remove features with mean coverage across all cells < this value
	* feature_impute_threshold : cells with coverage on features passing QC < this value will be imputed by the mean value for this feature

**Note on File Paths:**
the .py script assumes that .fastqs are stored in subdirectory "fastq/". edit paths in line 8 and line 16 of fastq_demultiplex.py accordingly if the location of input .fastq files or barcode locations are respectively moved.